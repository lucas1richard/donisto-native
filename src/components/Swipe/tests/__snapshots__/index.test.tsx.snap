// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Swipe /> renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Swipe />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ScrollViewMock
          horizontal={true}
          onScroll={[Function]}
          pagingEnabled={true}
          scrollEventThrottle={1000000}
          showsHorizontalScrollIndicator={false}
        />,
        <Component
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 4,
            }
          }
        />,
      ],
      "style": Object {
        "flex": 1,
        "marginBottom": 12,
        "position": "relative",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
          "horizontal": true,
          "onScroll": [Function],
          "pagingEnabled": true,
          "scrollEventThrottle": 1000000,
          "showsHorizontalScrollIndicator": false,
        },
        "ref": null,
        "rendered": null,
        "type": [MockFunction],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
          "style": Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 4,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ScrollViewMock
            horizontal={true}
            onScroll={[Function]}
            pagingEnabled={true}
            scrollEventThrottle={1000000}
            showsHorizontalScrollIndicator={false}
          />,
          <Component
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginTop": 4,
              }
            }
          />,
        ],
        "style": Object {
          "flex": 1,
          "marginBottom": 12,
          "position": "relative",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
            "horizontal": true,
            "onScroll": [Function],
            "pagingEnabled": true,
            "scrollEventThrottle": 1000000,
            "showsHorizontalScrollIndicator": false,
          },
          "ref": null,
          "rendered": null,
          "type": [MockFunction],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
            "style": Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 4,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
