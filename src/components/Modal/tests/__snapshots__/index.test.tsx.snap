// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Modal /> renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RNModal
    onHide={[MockFunction]}
  >
    mockChildren
  </RNModal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "animationType": "slide",
      "children": <Component
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <StatusBarComponent />
        <StackHeader
          noBackOption={true}
          onClose={[Function]}
          title=""
        />
        <ScrollViewMock>
          mockChildren
        </ScrollViewMock>
      </Component>,
      "hardwareAccelerated": false,
      "onHide": [MockFunction],
      "onShow": [Function],
      "visible": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <StatusBarComponent />,
          <StackHeader
            noBackOption={true}
            onClose={[Function]}
            title=""
          />,
          <ScrollViewMock>
            mockChildren
          </ScrollViewMock>,
        ],
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "noBackOption": true,
            "onClose": [Function],
            "title": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "mockChildren",
          },
          "ref": null,
          "rendered": "mockChildren",
          "type": [MockFunction],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animationType": "slide",
        "children": <Component
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <StatusBarComponent />
          <StackHeader
            noBackOption={true}
            onClose={[Function]}
            title=""
          />
          <ScrollViewMock>
            mockChildren
          </ScrollViewMock>
        </Component>,
        "hardwareAccelerated": false,
        "onHide": [MockFunction],
        "onShow": [Function],
        "visible": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <StatusBarComponent />,
            <StackHeader
              noBackOption={true}
              onClose={[Function]}
              title=""
            />,
            <ScrollViewMock>
              mockChildren
            </ScrollViewMock>,
          ],
          "style": Object {
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "noBackOption": true,
              "onClose": [Function],
              "title": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "mockChildren",
            },
            "ref": null,
            "rendered": "mockChildren",
            "type": [MockFunction],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
