// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Badge /> renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Badge
    label="mockLabel"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Txt
        color="light"
      >
        mockLabel
      </Txt>,
      "style": Object {
        "backgroundColor": "rgba(0,0,0,0.6)",
        "borderRadius": 999,
        "paddingHorizontal": 10,
        "paddingVertical": 3,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "mockLabel",
        "color": "light",
      },
      "ref": null,
      "rendered": "mockLabel",
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Txt
          color="light"
        >
          mockLabel
        </Txt>,
        "style": Object {
          "backgroundColor": "rgba(0,0,0,0.6)",
          "borderRadius": 999,
          "paddingHorizontal": 10,
          "paddingVertical": 3,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "mockLabel",
          "color": "light",
        },
        "ref": null,
        "rendered": "mockLabel",
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
