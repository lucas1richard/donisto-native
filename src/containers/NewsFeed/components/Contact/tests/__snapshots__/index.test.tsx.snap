// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NewsFeedContact /> renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewsFeedContact
    name="mockText"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "backgroundColor": "#f0f0f0",
              "borderRadius": 25,
              "height": 50,
              "width": 50,
            }
          }
        />,
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "rgb(171,169,167)",
              "fontSize": 16,
              "marginTop": 4,
            }
          }
        >
          mockText
        </Text>,
      ],
      "style": Object {
        "alignItems": "center",
        "padding": 7.5,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "style": Object {
            "backgroundColor": "#f0f0f0",
            "borderRadius": 25,
            "height": 50,
            "width": 50,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "mockText",
          "ellipsizeMode": "tail",
          "style": Object {
            "color": "rgb(171,169,167)",
            "fontSize": 16,
            "marginTop": 4,
          },
        },
        "ref": null,
        "rendered": "mockText",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "backgroundColor": "#f0f0f0",
                "borderRadius": 25,
                "height": 50,
                "width": 50,
              }
            }
          />,
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "rgb(171,169,167)",
                "fontSize": 16,
                "marginTop": 4,
              }
            }
          >
            mockText
          </Text>,
        ],
        "style": Object {
          "alignItems": "center",
          "padding": 7.5,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "style": Object {
              "backgroundColor": "#f0f0f0",
              "borderRadius": 25,
              "height": 50,
              "width": 50,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "mockText",
            "ellipsizeMode": "tail",
            "style": Object {
              "color": "rgb(171,169,167)",
              "fontSize": 16,
              "marginTop": 4,
            },
          },
          "ref": null,
          "rendered": "mockText",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
