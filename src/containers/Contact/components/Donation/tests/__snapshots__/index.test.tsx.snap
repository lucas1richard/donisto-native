// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Donation /> renders with just text 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Donation
    title="mockTitle"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TouchableOpacity
        activeOpacity={0.2}
      >
        <Component
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "red",
              "height": "100%",
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          <H2
            color="light"
          >
            mockTitle
          </H2>
        </Component>
      </TouchableOpacity>,
      "style": Object {
        "height": 240,
        "padding": 20,
        "width": 240,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.2,
        "children": <Component
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "red",
              "height": "100%",
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          <H2
            color="light"
          >
            mockTitle
          </H2>
        </Component>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <H2
            color="light"
          >
            mockTitle
          </H2>,
          "style": Object {
            "alignItems": "center",
            "backgroundColor": "red",
            "height": "100%",
            "justifyContent": "center",
            "width": "100%",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "mockTitle",
            "color": "light",
          },
          "ref": null,
          "rendered": "mockTitle",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TouchableOpacity
          activeOpacity={0.2}
        >
          <Component
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "red",
                "height": "100%",
                "justifyContent": "center",
                "width": "100%",
              }
            }
          >
            <H2
              color="light"
            >
              mockTitle
            </H2>
          </Component>
        </TouchableOpacity>,
        "style": Object {
          "height": 240,
          "padding": 20,
          "width": 240,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": <Component
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "red",
                "height": "100%",
                "justifyContent": "center",
                "width": "100%",
              }
            }
          >
            <H2
              color="light"
            >
              mockTitle
            </H2>
          </Component>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <H2
              color="light"
            >
              mockTitle
            </H2>,
            "style": Object {
              "alignItems": "center",
              "backgroundColor": "red",
              "height": "100%",
              "justifyContent": "center",
              "width": "100%",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "mockTitle",
              "color": "light",
            },
            "ref": null,
            "rendered": "mockTitle",
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
